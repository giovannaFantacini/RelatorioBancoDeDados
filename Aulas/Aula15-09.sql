-- SET SERVEROUTPUT ON;

-- STORE PROCEDURE
-- DROP PROCEDURE TESTE;

CREATE OR REPLACE PROCEDURE TESTE AS  
BEGIN
    DBMS_OUTPUT.PUT_LINE('TESTE 2');
END;
-- EXEC OR EXECUTE
EXECUTE TESTE;

BEGIN
    TESTE;
END;


-- STORE FUNCTION
CREATE OR REPLACE FUNCTION SF_NOME_CIDADE(P_ID_CIDADE NUMBER) RETURN VARCHAR2 AS
V_NOME CIDADE.NOME_CIDADE%TYPE;
BEGIN
    SELECT NOME_CIDADE 
        INTO V_NOME FROM CIDADE
        WHERE ID_CIDADE = P_ID_CIDADE;
    RETURN V_NOME;
END;

-- NÃO PODE DAR EXEC EM FUNCTION
SELECT A.*, SF_NOME_CIDADE(A.id_cidade) FROM ALUNO A, DUAL;

BEGIN
    DBMS_OUTPUT.PUT_LINE(SF_TESTE);
END;


CREATE OR REPLACE FUNCTION SF_MAX_COD_ALUNO RETURN VARCHAR2 AS
V_COD ALUNO.COD_ALUNO%TYPE;
BEGIN
    SELECT MAX(COD_ALUNO)
        INTO V_COD 
        FROM ALUNO;
    RETURN V_COD;
END;

BEGIN
    DBMS_OUTPUT.PUT_LINE(SF_MAX_COD_ALUNO);
END;

-- NÃO PODE DAR EXEC EM FUNCTION
SELECT A.*, SF_NOME_CIDADE(A.id_cidade), SF_MAX_COD_ALUNO FROM ALUNO A, DUAL;


-- SEQUENCE

DROP SEQUENCE SEQ_CIDADE;

CREATE SEQUENCE SEQ_CIDADE START WITH 6;

SELECT SEQ_CIDADE.NEXTVAL FROM DUAL;

CREATE OR REPLACE PROCEDURE ADD_CIDADE(
    P_NOME CIDADE.NOME_CIDADE%TYPE,
    P_COD CIDADE.COD_CIDADE%TYPE) IS
BEGIN
    INSERT INTO CIDADE (ID_CIDADE, NOME_CIDADE, COD_CIDADE) 
        VALUES (SEQ_CIDADE.NEXTVAL, P_NOME, SEQ_CIDADE.CURRVAL);
END;

EXEC ADD_CIDADE('TURIUBA','1011');





















